trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: bitbucket-credentials
  - name: PULL_REQUESTS_FILE
    value: $(System.DefaultWorkingDirectory)/pullRequestsRaised.txt

parameters:
  - name: projectsToUpdate
    displayName: Projects to update
    type: object
    default:
      - "test-dotnet-project"

steps:
  - checkout: none

  - task: InstallSSHKey@0
    displayName: 'Install Bitbucket SSH key'
    inputs:
      knownHostsEntry: $(BB_KEY_FINGERPRINT)
      sshPublicKey: $(BB_PUBLIC_KEY)
      sshKeySecureFile: $(BB_PRIVATE_KEY_FILE)

  - script: |
      echo "Add bitbucket to known hosts"
      ssh -o "StrictHostKeyChecking no" bitbucket.org

      echo "Configuring git user"
      git config --global user.name "Package Updater"
      git config --global user.email "pipelines@your-company.com"

      echo "Encoding Bitbucket basic auth"
      basic_auth=$(echo -n "$(BB_APP_USERNAME):$(BB_APP_PASSWORD)" | base64)
      echo "##vso[task.setvariable variable=BASIC_AUTH]$basic_auth"
    displayName: Configure git

  - script: dotnet tool install nukeeper --global
    displayName: Install NuKeeper

  - ${{each project in parameters.projectsToUpdate}}:
    - script: |
        git clone git@bitbucket.org:$(BB_ORGANISATION_NAME)/${{ project }}.git

        if [ -d "${{ project }}" ]; then
          cd ${{ project }}

          branch_name="package-update/$(Build.BuildId)"
          git checkout -b $branch_name

          echo "Running nukeeper"
          nukeeper_result="$(nukeeper update --maxpackageupdates 100 --age 1d)"
          echo "$nukeeper_result"

          nukeeper_result_formatted="${nukeeper_result//$'\n'/\\n\\n}"

          # only push changes if there are any changes listed in git status
          if [[ `git status --porcelain` ]]; then
            git add -A
            git commit -m "Update NuGet packages"
            git push origin package-update/$(Build.BuildId)

            pr_url=$(curl --location --request POST 'https://api.bitbucket.org/2.0/repositories/'$(BB_ORGANISATION_NAME)'/'${{ project }}'/pullrequests' \
            --header 'Authorization: Basic '$(BASIC_AUTH)'' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "title": "Package update '$(Build.BuildId)'",
                "source": {
                    "branch": {
                        "name": "'$branch_name'"
                    }
                },
                "description": "'"$nukeeper_result_formatted"'"
            }' | jq -r '.links.html.href')

            # Append created PR URL to pull requests file
            echo $pr_url >> $(PULL_REQUESTS_FILE)
          else
            echo "Everything already up to date, no branches pushed"
          fi

        else
          echo "##vso[task.logissue type=warning]Repository ${{ project }} not found or inaccessible!"
          echo "##vso[task.complete result=SucceededWithIssues;]"
        fi
      displayName: Update ${{ project }}
      condition: always()

  - script: |
      if [ -f "$(PULL_REQUESTS_FILE)" ]; then
        echo "Pull requests raised:"
        cat $(PULL_REQUESTS_FILE)
      else
        echo "No pull requests raised, everything up to date"
      fi
    displayName: Show PRs raised
    condition: always()
  